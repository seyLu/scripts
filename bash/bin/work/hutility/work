#!/bin/bash

source "${_SCRIPTS_PATH}/__init__"

[[ "$_DEBUG" == "true" ]] && set -x

#------------------------------------------------------------------------#
# Collection of Hutility scripts
#------------------------------------------------------------------------#

work_path="$(extract_value_assoc "${_PATHS}" "work")/Hutility"
readonly work_path
readonly -a valid_repos=(
    "55"
)
repo=$(
    dir=$(basename "${PWD}")

    if [[ "${valid_repos[*]}" =~ ${dir} ]]; then
        printf '%s\n' "${dir}"
    else
        printf '%s\n' "${valid_repos[0]}"
    fi
)
readonly repo

function main() {
    [[ $# -eq 0 ]] && list_config && return

    choices "$@"
}

function choices() {
    local options
    options=$(
        getopt -o c:vp --long change_dir:,vpn,instaff-chrome-profiles -- "$@"
    )

    [[ $? -ne 0 ]] && {
        log::error "incorrect options provided"
        return 1
    }

    eval set -- "${options}"

    while [[ $# -gt 0 ]]; do
        case "$1" in
        -c | --change_dir)
            change_dir "${2,,}"
            break
            ;;
        -v | --vpn)
            sudo openvpn --config "${work_path}/Hutility VPN Profile.ovpn" --auth-user-pass "${work_path}/vpn_creds.txt"
            break
            ;;
        -p | --instaff-chrome-profiles)
            open_instaff_chrome_profiles
            break
            ;;
        --)
            shift
            break
            ;;
        *)
            list_config
            break
            ;;
        esac
    done
}

function change_dir() {
    local repo_path="${work_path}/"

    case "$1" in
    55 | instaff) repo_path+="55" ;;
    *)
        list_valid_repos
        return
        ;;
    esac

    gnome-terminal --working-directory="${repo_path}" --no-environment --tab
}

function list_valid_repos() {
    echo
    local valid_repo
    for valid_repo in "${valid_repos[@]}"; do
        printf '%s\n' "  --> ${CYAN}${valid_repo}${END_COLOR}"
    done
}

function open_instaff_chrome_profiles() {
    local -r CHROME_EXE="/mnt/c/Program Files/Google/Chrome/Application/chrome.exe"
    local -ar PROFILES=(1 2 3 4)

    local profile
    for profile in "${PROFILES[@]}"; do
        "${CHROME_EXE}" --profile-directory="Profile ${profile}" --incognito http://localhost:8067
    done
}

function list_config() {
    read -rd "" details <<-EOF
\t
        ${RED}Company${END_COLOR}: Hutility
        ---------------------
    -->    ${CYAN}Repo${END_COLOR}: ${repo}
EOF

    printf '%s\n' "${details}"
}

main "$@"

[[ "$_DEBUG" == "true" ]] && set +x
