#! /bin/bash

shopt -s expand_aliases

[[ "$_DEBUG" == "true" ]] && set -x

#------------------------------------------------------------------------#
# Reads file and stringifies into array or associative array
# Input:
#   file.txt
# Output:
#   stringified content of file.txt
#------------------------------------------------------------------------#

function main() {
    [[ $# -eq 0 ]] && usage && return

    local -r options=$(getopt -o f:aA --long file:,array,assoc -- "$@")
    local file
    local format

    [[ $? -ne 0 ]] && {
        echo "Incorrect options provided"
        exit 1
    }

    eval set -- "${options}"

    while [[ $# -gt 0 ]]; do
        case "$1" in
        -f | --file)
            file="$2"
            shift 2
            ;;
        -a | --array)
            format="array"
            shift 1
            ;;
        -A | --assoc)
            format="assoc"
            shift 1
            ;;
        --)
            shift
            break
            ;;
        *)
            usage
            break
            ;;
        esac
    done

    if [[ -f "${file}" ]]; then
        stringify "${format}" "${file}"
    else
        echo -e "\nFile ${file} not found\n"
    fi
}

function stringify() {
    case "$1" in
    array) stringify_array "${file}" ;;
    assoc) stringify_assoc "${file}" ;;
    *) return ;;
    esac
}

function stringify_assoc() {
    local -r file="$1"

    readarray -t lines <"${file}"
    local string
    local key
    local value
    local substr

    local line
    for line in "${lines[@]}"; do
        key="${line%%=*}"
        value="${line##*=}"

        case "${value::1}" in
        / | .) ;;
        *) value="${HOME}/${value}" ;;
        esac

        if [[ -z "${string}" ]]; then
            substr="[${key}]=\"${value}\""
        else
            substr="[${key}]=\"${value}\":"
        fi

        string="${substr}${string}"
    done

    local -r string
    echo "${string}"
}

function usage() {
    echo "usage: WIP"
}

main "$@"

[[ "$_DEBUG" == "true" ]] && set +x
