#!/bin/bash

shopt -s expand_aliases
source "${_SCRIPTS_PATH}/__init__"

[[ "$_DEBUG" == "true" ]] && set -x

#------------------------------------------------------------------------#
# Print current working dir and list its file contents
# Arguments:
#   Key to stringified Associative Array _PATHS
# Outputs:
#   Mapped file path and its contents
#------------------------------------------------------------------------#

function main() {
    echo

    if [[ $# -eq 1 ]]; then
        local -r key="$1"
        local -r path=$(
            case "${key}" in
            dir | .) pwd ;;
            scripts) printf '%s\n' "${_SCRIPTS_PATH}/bin" ;;
            *) extract_value_assoc "${_PATHS}" "${key}" ;;
            esac
        )

        if [[ -n "${path}" ]]; then
            if [[ "${key}" != "scripts" ]]; then
                printf '%s\n' "${path}"
            fi
            list "${key}" "${path}"
        else
            printf '%s\n' "$1"
            ls "$1"
        fi
    else
        pwd
        ls
    fi

    echo
}

function list() {
    case "${key}" in
    scripts) ls -fRA "${path}" ;;
    host) list_hosts "${path}" ;;
    *) ls "${path}" ;;
    esac
}

# List executable binaries
function list_scripts() {
    local f
    for f in "$1"/*; do
        case "$(basename "$f")" in
        _*) continue ;;
        esac

        if [[ -d "$f" ]]; then
            continue
        fi

        basename="$(basename "$f")"
        cleaned="${basename%"${basename##*[^ ]}"}" # strip trailing spaces
        printf '%s ' "$cleaned"
    done
    echo
}

# List local domains for localhost
function list_hosts() {
    list -r BOLD_YELLOW="\e[1;${YELLOW#\\e[}"

    readarray -t lines <"$1"
    local line
    for line in "${lines[@]}"; do
        if [[ "${line}" == "127.0.0.1   "* ]]; then
            printf '%s\n' "${BOLD_YELLOW}${line#127.0.0.1   }${END_COLOR}"
        fi
    done
}

main "$@"

[[ "$_DEBUG" == "true" ]] && set +x
