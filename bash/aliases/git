#! /bin/bash
alias branch="reload; git branch --show-current"
alias gm="git reset --hard; git checkout main"


# simplify git for solo development
function g() {
    if [[ $# -eq 1 ]]; then
        git add .
        git commit -m "$@"

        if [[ "$(branch)" == "main" ]]; then
            git push
        else
            git push --set-upstream origin "$(branch)"
        fi
    else
        echo
        echo "Usage:"
        echo "  Current directory must be a repo"
        echo
        echo "Args:"
        echo "  Commit Message"
        echo
        echo "Example:"
        echo "  g \"<commit_message>\""
    fi
}


# simplify git add
function ga() {
    if [[ $# -gt 0 ]]; then
        git add "$@"
    else
        git add .
    fi
}


# simplify git commit
alias gc="git commit -m"

# simplify git push, pull
alias gp="git push"
alias gl="git pull"

# simplify push to remote
function gu() { [[ ! -z "$(branch)" ]] && git push --set-upstream origin "$(branch)"; }

# simplify working with git branch
function gb() {
    reload

    if [[ $# -gt 0 ]]; then
        local options=$( getopt -o lc:s:f:d: --long list,create:,switch:,find:,delete: -- "$@")

        [[ $? -ne 0 ]] && {
            echo "Incorrect options provided"
            exit 1
        }

        eval set -- "${options}"

        while [[ $# -gt 0 ]]; do
            case "$1" in
                -l | --list)
                    git branch
                    break
                    ;;
                -c | --create)
                    git reset --hard
                    git pull
                    git checkout main
                    git checkout -b "${2}"
                    break
                    ;;
                -s | --switch)
                    git reset --hard
                    git checkout "${2}"
                    break
                    ;;
                -f | --find)
                    git branch | grep --ignore-case "${2}"
                    break
                    ;;
                -d | --delete)
                    git reset --hard
                    git checkout main
                    git branch -d "${2}"
                    break
                    ;;
                --) shift; break ;;
                *) branch; break ;;
            esac
        done
    else
        branch
    fi
}
